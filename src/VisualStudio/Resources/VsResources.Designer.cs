//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet.VisualStudio.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class VsResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal VsResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.VisualStudio.Resources.VsResources", typeof(VsResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        public static string AggregateSourceName {
            get {
                return ResourceManager.GetString("AggregateSourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find &apos;{0}&apos; in &apos;{1}&apos; and found multiple versions of &apos;{0}&apos; installed. Please specify a version..
        /// </summary>
        public static string AmbiguousProjectLevelUninstal {
            get {
                return ResourceManager.GetString("AmbiguousProjectLevelUninstal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found multiple versions of &apos;{0}&apos; installed. Please specify a version..
        /// </summary>
        public static string AmbiguousUninstall {
            get {
                return ResourceManager.GetString("AmbiguousUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to update &apos;{0}&apos;. Found multiple versions installed..
        /// </summary>
        public static string AmbiguousUpdate {
            get {
                return ResourceManager.GetString("AmbiguousUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new version of NuGet Package Manager is available..
        /// </summary>
        public static string AskForUpdateMessage {
            get {
                return ResourceManager.GetString("AskForUpdateMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each package is licensed to you by its owner. NuGet is not responsible for, nor does it grant any licenses to, third-party packages. Some packages may include dependencies which are governed by additional licenses. Follow the package source (feed) URL to determine any dependencies..
        /// </summary>
        public static string Console_DisclaimerText {
            get {
                return ResourceManager.GetString("Console_DisclaimerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your machine group policy or user group policy disables execution of PowerShell script. Adjust your group policy settings to allow execution of PowerShell scripts..
        /// </summary>
        public static string Console_GroupPolicyError {
            get {
                return ResourceManager.GetString("Console_GroupPolicyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;get-help NuGet&apos; to see all available NuGet commands..
        /// </summary>
        public static string Console_HelpText {
            get {
                return ResourceManager.GetString("Console_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added file &apos;{0}&apos; to project &apos;{1}&apos;.
        /// </summary>
        public static string Debug_AddedFileToProject {
            get {
                return ResourceManager.GetString("Debug_AddedFileToProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added reference &apos;{0}&apos; to project &apos;{1}&apos;.
        /// </summary>
        public static string Debug_AddReference {
            get {
                return ResourceManager.GetString("Debug_AddReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed file &apos;{0}&apos;.
        /// </summary>
        public static string Debug_RemovedFile {
            get {
                return ResourceManager.GetString("Debug_RemovedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed file &apos;{0}&apos; from folder &apos;{1}&apos;.
        /// </summary>
        public static string Debug_RemovedFileFromFolder {
            get {
                return ResourceManager.GetString("Debug_RemovedFileFromFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed folder &apos;{0}&apos;.
        /// </summary>
        public static string Debug_RemovedFolder {
            get {
                return ResourceManager.GetString("Debug_RemovedFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed reference &apos;{0}&apos; from project &apos;{1}&apos;.
        /// </summary>
        public static string Debug_RemoveReference {
            get {
                return ResourceManager.GetString("Debug_RemoveReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each package is licensed to you by its owner. NuGet is not responsible for, nor does it grant any licenses to, third-party packages..
        /// </summary>
        public static string Dialog_DisclaimerText {
            get {
                return ResourceManager.GetString("Dialog_DisclaimerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t show again.
        /// </summary>
        public static string DoNotRemindAgain {
            get {
                return ResourceManager.GetString("DoNotRemindAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project is invalid.
        /// </summary>
        public static string DTE_InvalidProject {
            get {
                return ResourceManager.GetString("DTE_InvalidProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project &apos;{0}&apos; is unsupported.
        /// </summary>
        public static string DTE_ProjectUnsupported {
            get {
                return ResourceManager.GetString("DTE_ProjectUnsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading &apos;{0}&apos;..
        /// </summary>
        public static string ErrorReadingFile {
            get {
                return ResourceManager.GetString("ErrorReadingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing script file &apos;{0}&apos;..
        /// </summary>
        public static string ExecutingScript {
            get {
                return ResourceManager.GetString("ExecutingScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add reference to &apos;{0}&apos;. Please make sure that it is in the Global Assembly Cache..
        /// </summary>
        public static string FailedToAddGacReference {
            get {
                return ResourceManager.GetString("FailedToAddGacReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add reference to &apos;{0}&apos;..
        /// </summary>
        public static string FailedToAddReference {
            get {
                return ResourceManager.GetString("FailedToAddReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore for now.
        /// </summary>
        public static string IgnoreUpgrade {
            get {
                return ResourceManager.GetString("IgnoreUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; already installed..
        /// </summary>
        public static string Log_PackageAlreadyInstalled {
            get {
                return ResourceManager.GetString("Log_PackageAlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to retrieve package list because no source was specified..
        /// </summary>
        public static string NoActivePackageSource {
            get {
                return ResourceManager.GetString("NoActivePackageSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No updates available for &apos;{0}&apos;..
        /// </summary>
        public static string NoUpdatesAvailable {
            get {
                return ResourceManager.GetString("NoUpdatesAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NuGet official package source.
        /// </summary>
        public static string OfficialSourceName {
            get {
                return ResourceManager.GetString("OfficialSourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be removed because it in use by &apos;{1}&apos;.
        /// </summary>
        public static string PackageCannotBeRemovedBecauseItIsInUse {
            get {
                return ResourceManager.GetString("PackageCannotBeRemovedBecauseItIsInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package source does not belong to the collection of available sources..
        /// </summary>
        public static string PackageSource_Invalid {
            get {
                return ResourceManager.GetString("PackageSource_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No project was specified..
        /// </summary>
        public static string ProjectNotSpecified {
            get {
                return ResourceManager.GetString("ProjectNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Details.
        /// </summary>
        public static string ShowDetails {
            get {
                return ResourceManager.GetString("ShowDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate the solution directory. Please ensure that the solution has been saved..
        /// </summary>
        public static string SolutionDirectoryNotAvailable {
            get {
                return ResourceManager.GetString("SolutionDirectoryNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package &apos;{0}&apos; version &apos;{1}&apos; from the source &apos;{2}&apos;..
        /// </summary>
        public static string UnableToFindPackageFromSource {
            get {
                return ResourceManager.GetString("UnableToFindPackageFromSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package &apos;{0}&apos;..
        /// </summary>
        public static string UnknownPackage {
            get {
                return ResourceManager.GetString("UnknownPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package &apos;{0}&apos; in &apos;{1}&apos;..
        /// </summary>
        public static string UnknownPackageInProject {
            get {
                return ResourceManager.GetString("UnknownPackageInProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory &apos;{0}&apos; is not empty. Skipping....
        /// </summary>
        public static string Warning_DirectoryNotEmpty {
            get {
                return ResourceManager.GetString("Warning_DirectoryNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to generate binding redirects for &apos;{0}&apos;. {1}.
        /// </summary>
        public static string Warning_FailedToAddBindingRedirects {
            get {
                return ResourceManager.GetString("Warning_FailedToAddBindingRedirects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; already exists. Skipping....
        /// </summary>
        public static string Warning_FileAlreadyExists {
            get {
                return ResourceManager.GetString("Warning_FileAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install failed. Rolling back....
        /// </summary>
        public static string Warning_RollingBack {
            get {
                return ResourceManager.GetString("Warning_RollingBack", resourceCulture);
            }
        }
    }
}
